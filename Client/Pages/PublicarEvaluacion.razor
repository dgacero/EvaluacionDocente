@page "/evaluacion/publicar"
@using EvaluacionDocente.Shared.Models;
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<PageTitle>Evaluaciones</PageTitle>

<h1>Publica una evaluación</h1>

<form>
    <div class="form-group mb-2">
        <label>Profesor*</label>
        <select class="form-control" @bind="@evaluacion.ProfesorId" required>
            <option value="">Seleccione una opción</option>
            @foreach (var profesor in listaProfesores)
            {
                <option value="@profesor.Id">@profesor.Nombre</option>
            }
        </select>
    </div>

    <div class="form-group mb-2">
        <label>Calificación (0-10)*</label>
        <input type="number" min="0" max="10" step="0.5" class="form-control" @bind="@evaluacion.Calificacion" required>
    </div>

    <div class="form-group mb-3">
        <label>Comentarios</label>
        <textarea class="form-control" rows="3" @bind="@evaluacion.Comentarios"></textarea>
    </div>

    <button type="submit" class="btn btn-primary" @onclick="@Publicar">Publicar</button>
</form>

@code {
    Evaluacion evaluacion = new Evaluacion{Calificacion = 10};
    List<Profesor> listaProfesores = new List<Profesor>();

    protected override async Task OnInitializedAsync()
    {
        listaProfesores = await httpClient.GetFromJsonAsync<List<Profesor>>("/api/profesor");
    }

    private async Task Publicar()
    {
        await httpClient.PostAsJsonAsync("/api/evaluacion", evaluacion);
        NavigationManager.NavigateTo("/evaluacion", forceLoad: true);
    }
}